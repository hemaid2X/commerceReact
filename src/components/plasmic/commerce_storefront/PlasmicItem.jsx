// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: bvkZrMdCandYGyPCH1rh27
// Component: FnDb20O_ZY7wc
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import { ProductBox } from "@plasmicpkgs/commerce"; // plasmic-import: 1gYJf_XBZUAD/codeComponent
import PaheHeaderMenuTextDark from "../../PaheHeaderMenuTextDark"; // plasmic-import: O-g4SX5rheQN7b/component
import { CategoryCollection } from "@plasmicpkgs/commerce"; // plasmic-import: ny07p45F84c_/codeComponent
import { CategoryField } from "@plasmicpkgs/commerce"; // plasmic-import: hzqiq--xdG5T/codeComponent
import { ProductMedia } from "@plasmicpkgs/commerce"; // plasmic-import: qpULM0wwWW/codeComponent
import { ProductTextField } from "@plasmicpkgs/commerce"; // plasmic-import: S1F4q0wN6b/codeComponent
import { ProductPriceComponent } from "@plasmicpkgs/commerce"; // plasmic-import: _PaJxGc8gf/codeComponent
import { ProductVariantPicker } from "@plasmicpkgs/commerce"; // plasmic-import: i3vHZr7erKX/codeComponent
import { ProductQuantity } from "@plasmicpkgs/commerce"; // plasmic-import: CjfQQrwiHjD/codeComponent
import Select from "../../Select"; // plasmic-import: ZLEaM8OMizRIoj/component
import Select__Option from "../../Select__Option"; // plasmic-import: joNvp_cTXxoJpD/component
import Button from "../../Button"; // plasmic-import: 8Gj1GZbvcl1-2/component
import { AddToCartButton } from "@plasmicpkgs/commerce"; // plasmic-import: NR7KYUJmEqx/codeComponent
import { CartComponent } from "@plasmicpkgs/commerce"; // plasmic-import: UGhhaf1AiUhF/codeComponent
import { ProductCollection } from "@plasmicpkgs/commerce"; // plasmic-import: vU2jzVAnFP/codeComponent
import ProductMain from "../../ProductMain"; // plasmic-import: _ufapZf9wn6BWm/component
import ShopingSection from "../../ShopingSection"; // plasmic-import: vVEnLULYzbuBh3/component
import Instagram from "../../Instagram"; // plasmic-import: 6sZvKT5GqJ8zc4/component
import Footer from "../../Footer"; // plasmic-import: oy9J-HiVCgE7cB/component
import { useUnnamedGlobalGroupOfVariants } from "./PlasmicGlobalVariant__UnnamedGlobalGroupOfVariants"; // plasmic-import: hcBIwuNqA6-pvl/globalVariant
import { useScreenVariants as useScreenVariantshZ85LbGiaxg0I } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: hZ8-5LbGiaxg0I/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_commerce_storefront.module.css"; // plasmic-import: bvkZrMdCandYGyPCH1rh27/projectcss
import sty from "./PlasmicItem.module.css"; // plasmic-import: FnDb20O_ZY7wc/css
import LikeIcon from "./icons/PlasmicIcon__Like"; // plasmic-import: hq5rLE6jnWUI8X/icon
import FullStarIcon from "./icons/PlasmicIcon__FullStar"; // plasmic-import: 4y2xCyJqOqIagW/icon
import HalfStarIcon from "./icons/PlasmicIcon__HalfStar"; // plasmic-import: gr1CxlgV6vheey/icon
import EmptyStarIcon from "./icons/PlasmicIcon__EmptyStar"; // plasmic-import: plsnOYVv-ojK_W/icon

export const PlasmicItem__VariantProps = new Array();

export const PlasmicItem__ArgProps = new Array();

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());

const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicItem__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "quantity.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => "1"
      },
      {
        path: "description4.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "description3.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "description2.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      }
    ],

    [$props, $ctx]
  );

  const $state = p.useDollarState(stateSpecs, { $props, $ctx, $queries });
  const globalVariants = ensureGlobalVariants({
    unnamedGlobalGroupOfVariants: useUnnamedGlobalGroupOfVariants(),
    screen: useScreenVariantshZ85LbGiaxg0I()
  });
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root,
            {
              [sty.rootglobal_unnamedGlobalGroupOfVariants_unnamedVariant]:
                hasVariant(
                  globalVariants,
                  "unnamedGlobalGroupOfVariants",
                  "unnamedVariant"
                )
            }
          )}
        >
          <ProductBox
            data-plasmic-name={"productBox"}
            data-plasmic-override={overrides.productBox}
            className={classNames("__wab_instance", sty.productBox)}
            id={"eternity-nitro-mens-running-shoes"}
          >
            <ph.DataCtxReader>
              {$ctx => (
                <React.Fragment>
                  <PaheHeaderMenuTextDark
                    data-plasmic-name={"paheHeaderMenuTextDark"}
                    data-plasmic-override={overrides.paheHeaderMenuTextDark}
                    className={classNames(
                      "__wab_instance",
                      sty.paheHeaderMenuTextDark,
                      {
                        [sty.paheHeaderMenuTextDarkglobal_unnamedGlobalGroupOfVariants_unnamedVariant]:
                          hasVariant(
                            globalVariants,
                            "unnamedGlobalGroupOfVariants",
                            "unnamedVariant"
                          )
                      }
                    )}
                  />

                  <section
                    className={classNames(projectcss.all, sty.section__fuyQr)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.columns__fmGrs)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__p5Svq
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.columns__hSRA
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.column__swTjf
                            )}
                          >
                            <h4
                              className={classNames(
                                projectcss.all,
                                projectcss.h4,
                                projectcss.__wab_text,
                                sty.h4__jFCrK,
                                {
                                  [sty.h4global_unnamedGlobalGroupOfVariants_unnamedVariant__jFCrKAqsUc]:
                                    hasVariant(
                                      globalVariants,
                                      "unnamedGlobalGroupOfVariants",
                                      "unnamedVariant"
                                    )
                                }
                              )}
                            >
                              {"Products"}
                            </h4>
                            {true ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__yN5Hp
                                )}
                              >
                                {true ? (
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      sty.freeBox___9IZaK
                                    )}
                                  >
                                    {true ? (
                                      <p.Stack
                                        as={"div"}
                                        hasGap={true}
                                        className={classNames(
                                          projectcss.all,
                                          sty.freeBox__xwP33
                                        )}
                                      >
                                        <CategoryCollection
                                          data-plasmic-name={
                                            "categoryCollection"
                                          }
                                          data-plasmic-override={
                                            overrides.categoryCollection
                                          }
                                          className={classNames(
                                            "__wab_instance",
                                            sty.categoryCollection
                                          )}
                                          emptyMessage={
                                            <ph.DataCtxReader>
                                              {$ctx => (
                                                <div
                                                  className={classNames(
                                                    projectcss.all,
                                                    projectcss.__wab_text,
                                                    sty.text___4YrpK
                                                  )}
                                                >
                                                  {"No collection found!"}
                                                </div>
                                              )}
                                            </ph.DataCtxReader>
                                          }
                                          loadingMessage={
                                            <ph.DataCtxReader>
                                              {$ctx => (
                                                <div
                                                  className={classNames(
                                                    projectcss.all,
                                                    projectcss.__wab_text,
                                                    sty.text__iyyC4
                                                  )}
                                                >
                                                  {"Loading..."}
                                                </div>
                                              )}
                                            </ph.DataCtxReader>
                                          }
                                          noLayout={false}
                                        >
                                          <ph.DataCtxReader>
                                            {$ctx =>
                                              true ? (
                                                <h4
                                                  className={classNames(
                                                    projectcss.all,
                                                    projectcss.h4,
                                                    sty.h4___0TuHn
                                                  )}
                                                >
                                                  <CategoryField
                                                    data-plasmic-name={
                                                      "categoryField"
                                                    }
                                                    data-plasmic-override={
                                                      overrides.categoryField
                                                    }
                                                    className={classNames(
                                                      "__wab_instance",
                                                      sty.categoryField
                                                    )}
                                                    field={"name"}
                                                  />
                                                </h4>
                                              ) : null
                                            }
                                          </ph.DataCtxReader>
                                        </CategoryCollection>
                                      </p.Stack>
                                    ) : null}
                                  </div>
                                ) : null}
                              </div>
                            ) : null}
                          </div>
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.column__m32Vk
                            )}
                          >
                            <ProductMedia
                              className={classNames(
                                "__wab_instance",
                                sty.productMedia__whwzI
                              )}
                            />

                            <ProductMedia
                              className={classNames(
                                "__wab_instance",
                                sty.productMedia__mcIg6
                              )}
                              mediaIndex={1}
                            />

                            <ProductMedia
                              className={classNames(
                                "__wab_instance",
                                sty.productMedia___5OvJy
                              )}
                              mediaIndex={2}
                            />
                          </p.Stack>
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__vK3Xo
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__b3Wx6
                          )}
                        >
                          <ProductMedia
                            className={classNames(
                              "__wab_instance",
                              sty.productMedia__iBFr1
                            )}
                          />

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__zoeJi
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__amqmN
                              )}
                            >
                              <ProductMedia
                                className={classNames(
                                  "__wab_instance",
                                  sty.productMedia__fYsfV
                                )}
                                mediaIndex={1}
                              />
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__ioPLi
                              )}
                            >
                              <ProductMedia
                                className={classNames(
                                  "__wab_instance",
                                  sty.productMedia__gzLzg
                                )}
                                mediaIndex={2}
                              />
                            </div>
                          </p.Stack>
                        </p.Stack>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__qxJeS,
                          {
                            [sty.columnglobal_unnamedGlobalGroupOfVariants_unnamedVariant__qxJeSAqsUc]:
                              hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                          }
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___6Zz5V,
                            {
                              [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant___6Zz5VAqsUc]:
                                hasVariant(
                                  globalVariants,
                                  "unnamedGlobalGroupOfVariants",
                                  "unnamedVariant"
                                )
                            }
                          )}
                        >
                          <h2
                            data-plasmic-name={"h2"}
                            data-plasmic-override={overrides.h2}
                            className={classNames(
                              projectcss.all,
                              projectcss.h2,
                              sty.h2
                            )}
                          >
                            <ProductTextField
                              className={classNames(
                                "__wab_instance",
                                sty.productTextField__xoodh
                              )}
                              field={"name"}
                            />
                          </h2>
                          {true ? (
                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__pTaXt
                              )}
                            >
                              <h5
                                data-plasmic-name={"h5"}
                                data-plasmic-override={overrides.h5}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h5,
                                  sty.h5
                                )}
                              >
                                <ProductPriceComponent
                                  data-plasmic-name={"productPrice"}
                                  data-plasmic-override={overrides.productPrice}
                                  className={classNames(
                                    "__wab_instance",
                                    sty.productPrice
                                  )}
                                />
                              </h5>
                            </p.Stack>
                          ) : null}
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___77LdA
                            )}
                          >
                            <ProductTextField
                              className={classNames(
                                "__wab_instance",
                                sty.productTextField__qpZw3
                              )}
                              field={"description"}
                            />
                          </p.Stack>
                          <ProductVariantPicker
                            data-plasmic-name={"productVariantPicker"}
                            data-plasmic-override={
                              overrides.productVariantPicker
                            }
                            className={classNames(
                              "__wab_instance",
                              sty.productVariantPicker
                            )}
                          />

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__ySftB
                            )}
                          >
                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__etVm9
                              )}
                            >
                              <h3
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h3,
                                  projectcss.__wab_text,
                                  sty.h3__mG8U
                                )}
                              >
                                {"Quantity"}
                              </h3>
                              <p.Stack
                                as={"div"}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__sVkvv
                                )}
                              >
                                <ProductQuantity
                                  data-plasmic-name={"productQuantity"}
                                  data-plasmic-override={
                                    overrides.productQuantity
                                  }
                                  className={classNames(
                                    "__wab_instance",
                                    sty.productQuantity
                                  )}
                                >
                                  <Select
                                    data-plasmic-name={"quantity"}
                                    data-plasmic-override={overrides.quantity}
                                    name={""}
                                    onChange={(...eventArgs) => {
                                      p.generateStateOnChangeProp($state, [
                                        "quantity",
                                        "value"
                                      ])(eventArgs[0]);
                                    }}
                                    selectedContent2={""}
                                    value={p.generateStateValueProp($state, [
                                      "quantity",
                                      "value"
                                    ])}
                                  >
                                    <Select__Option
                                      className={classNames(
                                        "__wab_instance",
                                        sty.option__s1Tu
                                      )}
                                      value={"1"}
                                    >
                                      {"1"}
                                    </Select__Option>
                                    <Select__Option
                                      className={classNames(
                                        "__wab_instance",
                                        sty.option__nOu38
                                      )}
                                      value={"2"}
                                    >
                                      {"2"}
                                    </Select__Option>
                                    <Select__Option
                                      className={classNames(
                                        "__wab_instance",
                                        sty.option___0Cjek
                                      )}
                                      value={"3"}
                                    >
                                      {"3"}
                                    </Select__Option>
                                    <Select__Option
                                      className={classNames(
                                        "__wab_instance",
                                        sty.option__lUTzN
                                      )}
                                      value={"4"}
                                    >
                                      {"4"}
                                    </Select__Option>
                                    <Select__Option
                                      className={classNames(
                                        "__wab_instance",
                                        sty.option__mLuKg
                                      )}
                                      value={"5"}
                                    >
                                      {"5"}
                                    </Select__Option>
                                  </Select>
                                </ProductQuantity>
                                <Button
                                  data-plasmic-name={"likeButton"}
                                  data-plasmic-override={overrides.likeButton}
                                  colors={"lightGrayOutline"}
                                  iconOnly={true}
                                  size={"large"}
                                  startIcon={
                                    <LikeIcon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg___4JBw8
                                      )}
                                      role={"img"}
                                    />
                                  }
                                />

                                {true ? (
                                  <p.Stack
                                    as={"div"}
                                    hasGap={true}
                                    className={classNames(
                                      projectcss.all,
                                      sty.freeBox__vls
                                    )}
                                  >
                                    <AddToCartButton
                                      data-plasmic-name={"addToCartButton"}
                                      data-plasmic-override={
                                        overrides.addToCartButton
                                      }
                                      className={classNames(
                                        "__wab_instance",
                                        sty.addToCartButton
                                      )}
                                    >
                                      <button
                                        data-plasmic-name={"button"}
                                        data-plasmic-override={overrides.button}
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.button,
                                          projectcss.__wab_text,
                                          sty.button
                                        )}
                                      >
                                        {"Add to cart "}
                                      </button>
                                    </AddToCartButton>
                                  </p.Stack>
                                ) : null}
                              </p.Stack>
                            </p.Stack>
                          </p.Stack>
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___0HAfu
                            )}
                          >
                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__vRbYi
                              )}
                            >
                              <Select
                                data-plasmic-name={"description4"}
                                data-plasmic-override={overrides.description4}
                                className={classNames(
                                  "__wab_instance",
                                  sty.description4,
                                  {
                                    [sty.description4global_unnamedGlobalGroupOfVariants_unnamedVariant]:
                                      hasVariant(
                                        globalVariants,
                                        "unnamedGlobalGroupOfVariants",
                                        "unnamedVariant"
                                      )
                                  }
                                )}
                                name={""}
                                onChange={(...eventArgs) => {
                                  p.generateStateOnChangeProp($state, [
                                    "description4",
                                    "value"
                                  ])(eventArgs[0]);
                                }}
                                placeholder={
                                  <h6
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.h6,
                                      projectcss.__wab_text,
                                      sty.h6__wSKf
                                    )}
                                  >
                                    {"Shipping and returns"}
                                  </h6>
                                }
                                value={p.generateStateValueProp($state, [
                                  "description4",
                                  "value"
                                ])}
                              >
                                <Select__Option
                                  className={classNames(
                                    "__wab_instance",
                                    sty.option__f4Iq4
                                  )}
                                  value={"value1"}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__fbIfI
                                    )}
                                  >
                                    {"Option 1"}
                                  </div>
                                </Select__Option>
                                <Select__Option
                                  className={classNames(
                                    "__wab_instance",
                                    sty.option___9Keig
                                  )}
                                  value={"value2"}
                                >
                                  {"Option 2"}
                                </Select__Option>
                              </Select>
                              <Select
                                data-plasmic-name={"description3"}
                                data-plasmic-override={overrides.description3}
                                className={classNames(
                                  "__wab_instance",
                                  sty.description3,
                                  {
                                    [sty.description3global_unnamedGlobalGroupOfVariants_unnamedVariant]:
                                      hasVariant(
                                        globalVariants,
                                        "unnamedGlobalGroupOfVariants",
                                        "unnamedVariant"
                                      )
                                  }
                                )}
                                name={""}
                                onChange={(...eventArgs) => {
                                  p.generateStateOnChangeProp($state, [
                                    "description3",
                                    "value"
                                  ])(eventArgs[0]);
                                }}
                                placeholder={
                                  <h6
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.h6,
                                      projectcss.__wab_text,
                                      sty.h6__c1Iq
                                    )}
                                  >
                                    {"Details"}
                                  </h6>
                                }
                                value={p.generateStateValueProp($state, [
                                  "description3",
                                  "value"
                                ])}
                              >
                                <Select__Option
                                  className={classNames(
                                    "__wab_instance",
                                    sty.option__hjUqo
                                  )}
                                  value={"value1"}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__piJ6S
                                    )}
                                  >
                                    {"Option 1"}
                                  </div>
                                </Select__Option>
                                <Select__Option
                                  className={classNames(
                                    "__wab_instance",
                                    sty.option___5Grrw
                                  )}
                                  value={"value2"}
                                >
                                  {"Option 2"}
                                </Select__Option>
                              </Select>
                              {(
                                hasVariant(
                                  globalVariants,
                                  "unnamedGlobalGroupOfVariants",
                                  "unnamedVariant"
                                )
                                  ? true
                                  : false
                              ) ? (
                                <Select
                                  data-plasmic-name={"description2"}
                                  data-plasmic-override={overrides.description2}
                                  className={classNames(
                                    "__wab_instance",
                                    sty.description2,
                                    {
                                      [sty.description2global_unnamedGlobalGroupOfVariants_unnamedVariant]:
                                        hasVariant(
                                          globalVariants,
                                          "unnamedGlobalGroupOfVariants",
                                          "unnamedVariant"
                                        )
                                    }
                                  )}
                                  name={""}
                                  onChange={(...eventArgs) => {
                                    p.generateStateOnChangeProp($state, [
                                      "description2",
                                      "value"
                                    ])(eventArgs[0]);
                                  }}
                                  placeholder={"Details"}
                                  value={p.generateStateValueProp($state, [
                                    "description2",
                                    "value"
                                  ])}
                                >
                                  <Select__Option
                                    className={classNames(
                                      "__wab_instance",
                                      sty.option___3GmMu
                                    )}
                                    value={"value1"}
                                  >
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__bawku
                                      )}
                                    >
                                      {"Option 1"}
                                    </div>
                                  </Select__Option>
                                  <Select__Option
                                    className={classNames(
                                      "__wab_instance",
                                      sty.option__bVkGy
                                    )}
                                    value={"value2"}
                                  >
                                    {"Option 2"}
                                  </Select__Option>
                                </Select>
                              ) : null}
                            </p.Stack>
                          </p.Stack>
                        </p.Stack>
                        <CartComponent
                          data-plasmic-name={"cart"}
                          data-plasmic-override={overrides.cart}
                          className={classNames("__wab_instance", sty.cart)}
                          hideIfIsEmpty={false}
                        />
                      </div>
                    </p.Stack>
                  </section>
                  <p.Stack
                    as={"section"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.section__hXSf, {
                      [sty.sectionglobal_unnamedGlobalGroupOfVariants_unnamedVariant__hXSfAqsUc]:
                        hasVariant(
                          globalVariants,
                          "unnamedGlobalGroupOfVariants",
                          "unnamedVariant"
                        )
                    })}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__muWih,
                        {
                          [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__muWihAqsUc]:
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                        }
                      )}
                    >
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__ccMjg,
                          {
                            [sty.h3global_unnamedGlobalGroupOfVariants_unnamedVariant__ccMjgAqsUc]:
                              hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                          }
                        )}
                      >
                        {"4.3 stars from 10 reviews"}
                      </h3>
                    </p.Stack>
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__dmTp)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.columns__p42Sj,
                          {
                            [sty.columnsglobal_unnamedGlobalGroupOfVariants_unnamedVariant__p42SjAqsUc]:
                              hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                          }
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.column__l08Du,
                            {
                              [sty.columnglobal_unnamedGlobalGroupOfVariants_unnamedVariant__l08DuAqsUc]:
                                hasVariant(
                                  globalVariants,
                                  "unnamedGlobalGroupOfVariants",
                                  "unnamedVariant"
                                )
                            }
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__zk7UK,
                              {
                                [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__zk7UKAqsUc]:
                                  hasVariant(
                                    globalVariants,
                                    "unnamedGlobalGroupOfVariants",
                                    "unnamedVariant"
                                  )
                              }
                            )}
                          >
                            <FullStarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__zqESw
                              )}
                              role={"img"}
                            />

                            <FullStarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__vU5Kf
                              )}
                              role={"img"}
                            />

                            <FullStarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__gR
                              )}
                              role={"img"}
                            />

                            <FullStarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__rrTiw
                              )}
                              role={"img"}
                            />

                            <FullStarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__gf46R
                              )}
                              role={"img"}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__vHKyM,
                                {
                                  [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__vHKyMAqsUc]:
                                    hasVariant(
                                      globalVariants,
                                      "unnamedGlobalGroupOfVariants",
                                      "unnamedVariant"
                                    )
                                }
                              )}
                            >
                              {hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                                ? " 5/5"
                                : "5/5"}
                            </div>
                          </div>
                          <h4
                            className={classNames(
                              projectcss.all,
                              projectcss.h4,
                              projectcss.__wab_text,
                              sty.h4__jbqbl,
                              {
                                [sty.h4global_unnamedGlobalGroupOfVariants_unnamedVariant__jbqblAqsUc]:
                                  hasVariant(
                                    globalVariants,
                                    "unnamedGlobalGroupOfVariants",
                                    "unnamedVariant"
                                  )
                              }
                            )}
                          >
                            {"Perfect"}
                          </h4>
                          <h6
                            className={classNames(
                              projectcss.all,
                              projectcss.h6,
                              projectcss.__wab_text,
                              sty.h6__cOeFk,
                              {
                                [sty.h6global_unnamedGlobalGroupOfVariants_unnamedVariant__cOeFkAqsUc]:
                                  hasVariant(
                                    globalVariants,
                                    "unnamedGlobalGroupOfVariants",
                                    "unnamedVariant"
                                  )
                              }
                            )}
                          >
                            {hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                              ? "Great fit and feel. They elevate lounging to the next level!"
                              : "Great fit and feel. They elevate lounging to the next level!"}
                          </h6>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__e0Ahy,
                              {
                                [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__e0AhyAqsUc]:
                                  hasVariant(
                                    globalVariants,
                                    "unnamedGlobalGroupOfVariants",
                                    "unnamedVariant"
                                  )
                              }
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ctBet,
                                {
                                  [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__ctBetAqsUc]:
                                    hasVariant(
                                      globalVariants,
                                      "unnamedGlobalGroupOfVariants",
                                      "unnamedVariant"
                                    )
                                }
                              )}
                            >
                              {hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                                ? " 5/5"
                                : "Heidi C. | December, 2019"}
                            </div>
                          </div>
                          {(
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                              ? true
                              : false
                          ) ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___9WxX0,
                                {
                                  [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant___9WxX0AqsUc]:
                                    hasVariant(
                                      globalVariants,
                                      "unnamedGlobalGroupOfVariants",
                                      "unnamedVariant"
                                    )
                                }
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__poHmQ,
                                  {
                                    [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__poHmQAqsUc]:
                                      hasVariant(
                                        globalVariants,
                                        "unnamedGlobalGroupOfVariants",
                                        "unnamedVariant"
                                      )
                                  }
                                )}
                              >
                                {"Heidi C. | December, 2019"}
                              </div>
                            </div>
                          ) : null}
                        </p.Stack>
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.column__hcFgh,
                            {
                              [sty.columnglobal_unnamedGlobalGroupOfVariants_unnamedVariant__hcFghAqsUc]:
                                hasVariant(
                                  globalVariants,
                                  "unnamedGlobalGroupOfVariants",
                                  "unnamedVariant"
                                )
                            }
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__kukpZ,
                              {
                                [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__kukpZAqsUc]:
                                  hasVariant(
                                    globalVariants,
                                    "unnamedGlobalGroupOfVariants",
                                    "unnamedVariant"
                                  )
                              }
                            )}
                          >
                            <FullStarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__dvFJ
                              )}
                              role={"img"}
                            />

                            <FullStarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__n1ID
                              )}
                              role={"img"}
                            />

                            <FullStarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__lhMmB
                              )}
                              role={"img"}
                            />

                            <HalfStarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__sMhVf
                              )}
                              role={"img"}
                            />

                            <EmptyStarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__mukkk
                              )}
                              role={"img"}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__zkUhx,
                                {
                                  [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__zkUhxAqsUc]:
                                    hasVariant(
                                      globalVariants,
                                      "unnamedGlobalGroupOfVariants",
                                      "unnamedVariant"
                                    )
                                }
                              )}
                            >
                              {hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                                ? " 5/5"
                                : "3.5/5"}
                            </div>
                          </div>
                          <h4
                            className={classNames(
                              projectcss.all,
                              projectcss.h4,
                              projectcss.__wab_text,
                              sty.h4__q2Yqf,
                              {
                                [sty.h4global_unnamedGlobalGroupOfVariants_unnamedVariant__q2YqfAqsUc]:
                                  hasVariant(
                                    globalVariants,
                                    "unnamedGlobalGroupOfVariants",
                                    "unnamedVariant"
                                  )
                              }
                            )}
                          >
                            {"So comfortable!"}
                          </h4>
                          <h6
                            className={classNames(
                              projectcss.all,
                              projectcss.h6,
                              projectcss.__wab_text,
                              sty.h6__rkJvT,
                              {
                                [sty.h6global_unnamedGlobalGroupOfVariants_unnamedVariant__rkJvTAqsUc]:
                                  hasVariant(
                                    globalVariants,
                                    "unnamedGlobalGroupOfVariants",
                                    "unnamedVariant"
                                  )
                              }
                            )}
                          >
                            {hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                              ? "Great fit and feel. They elevate lounging to the next level!"
                              : "I sized up just in case and kind of wished I hadn’t. Very comfortable and I live in them exclusively during the weekend."}
                          </h6>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__vPY9,
                              {
                                [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__vPY9AqsUc]:
                                  hasVariant(
                                    globalVariants,
                                    "unnamedGlobalGroupOfVariants",
                                    "unnamedVariant"
                                  )
                              }
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__mnUaf,
                                {
                                  [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__mnUafAqsUc]:
                                    hasVariant(
                                      globalVariants,
                                      "unnamedGlobalGroupOfVariants",
                                      "unnamedVariant"
                                    )
                                }
                              )}
                            >
                              {hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                                ? " 5/5"
                                : "Heidi C. | December, 2019"}
                            </div>
                          </div>
                          {(
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                              ? true
                              : false
                          ) ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__tBaP,
                                {
                                  [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__tBaPAqsUc]:
                                    hasVariant(
                                      globalVariants,
                                      "unnamedGlobalGroupOfVariants",
                                      "unnamedVariant"
                                    )
                                }
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__dcbHw,
                                  {
                                    [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__dcbHwAqsUc]:
                                      hasVariant(
                                        globalVariants,
                                        "unnamedGlobalGroupOfVariants",
                                        "unnamedVariant"
                                      )
                                  }
                                )}
                              >
                                {"Heidi C. | December, 2019"}
                              </div>
                            </div>
                          ) : null}
                        </p.Stack>
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.column__fO7Bi,
                            {
                              [sty.columnglobal_unnamedGlobalGroupOfVariants_unnamedVariant__fO7BiAqsUc]:
                                hasVariant(
                                  globalVariants,
                                  "unnamedGlobalGroupOfVariants",
                                  "unnamedVariant"
                                )
                            }
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__jtBpj,
                              {
                                [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__jtBpjAqsUc]:
                                  hasVariant(
                                    globalVariants,
                                    "unnamedGlobalGroupOfVariants",
                                    "unnamedVariant"
                                  )
                              }
                            )}
                          >
                            <FullStarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__f0Dup
                              )}
                              role={"img"}
                            />

                            <FullStarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__rtdHb
                              )}
                              role={"img"}
                            />

                            <FullStarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__vtLvi
                              )}
                              role={"img"}
                            />

                            <FullStarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__hosnk
                              )}
                              role={"img"}
                            />

                            <EmptyStarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__kGcJz
                              )}
                              role={"img"}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__wUh3O,
                                {
                                  [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__wUh3OAqsUc]:
                                    hasVariant(
                                      globalVariants,
                                      "unnamedGlobalGroupOfVariants",
                                      "unnamedVariant"
                                    )
                                }
                              )}
                            >
                              {hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                                ? " 5/5"
                                : "4/5"}
                            </div>
                          </div>
                          <h4
                            className={classNames(
                              projectcss.all,
                              projectcss.h4,
                              projectcss.__wab_text,
                              sty.h4__xs51,
                              {
                                [sty.h4global_unnamedGlobalGroupOfVariants_unnamedVariant__xs51AqsUc]:
                                  hasVariant(
                                    globalVariants,
                                    "unnamedGlobalGroupOfVariants",
                                    "unnamedVariant"
                                  )
                              }
                            )}
                          >
                            {"Comfy but thin"}
                          </h4>
                          <h6
                            className={classNames(
                              projectcss.all,
                              projectcss.h6,
                              projectcss.__wab_text,
                              sty.h6___9TlzN,
                              {
                                [sty.h6global_unnamedGlobalGroupOfVariants_unnamedVariant___9TlzNAqsUc]:
                                  hasVariant(
                                    globalVariants,
                                    "unnamedGlobalGroupOfVariants",
                                    "unnamedVariant"
                                  )
                              }
                            )}
                          >
                            {hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                              ? "Great fit and feel. They elevate lounging to the next level!"
                              : "Comfortable but kinda thin for a pant. I typically wear a 32/33 pant and had to size up to XL for these to not fit like a legging. Have been wearing pretty solid for a month of so and there's some pilling, but not a lot. Good price for OK product."}
                          </h6>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__nfByk,
                              {
                                [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__nfBykAqsUc]:
                                  hasVariant(
                                    globalVariants,
                                    "unnamedGlobalGroupOfVariants",
                                    "unnamedVariant"
                                  )
                              }
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__npbbZ,
                                {
                                  [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__npbbZAqsUc]:
                                    hasVariant(
                                      globalVariants,
                                      "unnamedGlobalGroupOfVariants",
                                      "unnamedVariant"
                                    )
                                }
                              )}
                            >
                              {hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                                ? " 5/5"
                                : "Heidi C. | December, 2019"}
                            </div>
                          </div>
                          {(
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                              ? true
                              : false
                          ) ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__fdOL,
                                {
                                  [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__fdOLAqsUc]:
                                    hasVariant(
                                      globalVariants,
                                      "unnamedGlobalGroupOfVariants",
                                      "unnamedVariant"
                                    )
                                }
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__eKf1S,
                                  {
                                    [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__eKf1SAqsUc]:
                                      hasVariant(
                                        globalVariants,
                                        "unnamedGlobalGroupOfVariants",
                                        "unnamedVariant"
                                      )
                                  }
                                )}
                              >
                                {"Heidi C. | December, 2019"}
                              </div>
                            </div>
                          ) : null}
                        </p.Stack>
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.column__t6Sl,
                            {
                              [sty.columnglobal_unnamedGlobalGroupOfVariants_unnamedVariant__t6SlAqsUc]:
                                hasVariant(
                                  globalVariants,
                                  "unnamedGlobalGroupOfVariants",
                                  "unnamedVariant"
                                )
                            }
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__c3Xza,
                              {
                                [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__c3XzaAqsUc]:
                                  hasVariant(
                                    globalVariants,
                                    "unnamedGlobalGroupOfVariants",
                                    "unnamedVariant"
                                  )
                              }
                            )}
                          >
                            <FullStarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg___95Ljy
                              )}
                              role={"img"}
                            />

                            <FullStarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__fDhvy
                              )}
                              role={"img"}
                            />

                            <FullStarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__nEiHc
                              )}
                              role={"img"}
                            />

                            <FullStarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__obPo
                              )}
                              role={"img"}
                            />

                            <FullStarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg___97EbA
                              )}
                              role={"img"}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__dcbTl,
                                {
                                  [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__dcbTlAqsUc]:
                                    hasVariant(
                                      globalVariants,
                                      "unnamedGlobalGroupOfVariants",
                                      "unnamedVariant"
                                    )
                                }
                              )}
                            >
                              {hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                                ? " 5/5"
                                : "5/5"}
                            </div>
                          </div>
                          <h4
                            className={classNames(
                              projectcss.all,
                              projectcss.h4,
                              projectcss.__wab_text,
                              sty.h4__rNp9,
                              {
                                [sty.h4global_unnamedGlobalGroupOfVariants_unnamedVariant__rNp9AqsUc]:
                                  hasVariant(
                                    globalVariants,
                                    "unnamedGlobalGroupOfVariants",
                                    "unnamedVariant"
                                  )
                              }
                            )}
                          >
                            {"So comfortable!"}
                          </h4>
                          <h6
                            className={classNames(
                              projectcss.all,
                              projectcss.h6,
                              projectcss.__wab_text,
                              sty.h6__kK4Cl,
                              {
                                [sty.h6global_unnamedGlobalGroupOfVariants_unnamedVariant__kK4ClAqsUc]:
                                  hasVariant(
                                    globalVariants,
                                    "unnamedGlobalGroupOfVariants",
                                    "unnamedVariant"
                                  )
                              }
                            )}
                          >
                            {hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                              ? "Great fit and feel. They elevate lounging to the next level!"
                              : "I sized up just in case and kind of wished I hadn’t. Very comfortable and I live in them exclusively during the weekend."}
                          </h6>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__zlkYs,
                              {
                                [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__zlkYsAqsUc]:
                                  hasVariant(
                                    globalVariants,
                                    "unnamedGlobalGroupOfVariants",
                                    "unnamedVariant"
                                  )
                              }
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__f9PJe,
                                {
                                  [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__f9PJeAqsUc]:
                                    hasVariant(
                                      globalVariants,
                                      "unnamedGlobalGroupOfVariants",
                                      "unnamedVariant"
                                    )
                                }
                              )}
                            >
                              {hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                                ? " 5/5"
                                : "Heidi C. | December, 2019"}
                            </div>
                          </div>
                          {(
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                              ? true
                              : false
                          ) ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__lhlP9,
                                {
                                  [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__lhlP9AqsUc]:
                                    hasVariant(
                                      globalVariants,
                                      "unnamedGlobalGroupOfVariants",
                                      "unnamedVariant"
                                    )
                                }
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__gHfV1,
                                  {
                                    [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__gHfV1AqsUc]:
                                      hasVariant(
                                        globalVariants,
                                        "unnamedGlobalGroupOfVariants",
                                        "unnamedVariant"
                                      )
                                  }
                                )}
                              >
                                {"Heidi C. | December, 2019"}
                              </div>
                            </div>
                          ) : null}
                        </p.Stack>
                      </div>
                    </p.Stack>
                    {(
                      hasVariant(
                        globalVariants,
                        "unnamedGlobalGroupOfVariants",
                        "unnamedVariant"
                      )
                        ? true
                        : true
                    ) ? (
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___3LoRm,
                          {
                            [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant___3LoRmAqsUc]:
                              hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                          }
                        )}
                      >
                        <a
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            sty.link__v3FGz,
                            {
                              [sty.linkglobal_unnamedGlobalGroupOfVariants_unnamedVariant__v3FGzAqsUc]:
                                hasVariant(
                                  globalVariants,
                                  "unnamedGlobalGroupOfVariants",
                                  "unnamedVariant"
                                )
                            }
                          )}
                        >
                          {"View all reviews"}
                        </a>
                      </p.Stack>
                    ) : null}
                    {(
                      hasVariant(
                        globalVariants,
                        "unnamedGlobalGroupOfVariants",
                        "unnamedVariant"
                      )
                        ? true
                        : false
                    ) ? (
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___2ZHdn,
                          {
                            [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant___2ZHdnAqsUc]:
                              hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                          }
                        )}
                      >
                        <a
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            sty.link__yffVv,
                            {
                              [sty.linkglobal_unnamedGlobalGroupOfVariants_unnamedVariant__yffVvAqsUc]:
                                hasVariant(
                                  globalVariants,
                                  "unnamedGlobalGroupOfVariants",
                                  "unnamedVariant"
                                )
                            }
                          )}
                        >
                          {"View all reviews"}
                        </a>
                      </p.Stack>
                    ) : null}
                  </p.Stack>
                  <p.Stack
                    as={"section"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.section__e0EqU)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__i3Vme,
                        {
                          [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__i3VmeAqsUc]:
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                        }
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__z9Iv0
                        )}
                      >
                        {"Suggested products"}
                      </div>
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__yGdav
                        )}
                      >
                        {"You may also like to check out these products."}
                      </h3>
                      <ProductCollection
                        data-plasmic-name={"productCollection"}
                        data-plasmic-override={overrides.productCollection}
                        className={classNames(
                          "__wab_instance",
                          sty.productCollection
                        )}
                        count={4}
                        emptyMessage={
                          <ph.DataCtxReader>
                            {$ctx => (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__nJq6G
                                )}
                              >
                                {"No product found!"}
                              </div>
                            )}
                          </ph.DataCtxReader>
                        }
                        loadingMessage={
                          <ph.DataCtxReader>
                            {$ctx => (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__fpwb6
                                )}
                              >
                                {"Loading..."}
                              </div>
                            )}
                          </ph.DataCtxReader>
                        }
                        sort={"latest-desc"}
                      >
                        <ph.DataCtxReader>
                          {$ctx =>
                            true ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__geMeh
                                )}
                              >
                                <ProductMain
                                  data-plasmic-name={"productMain"}
                                  data-plasmic-override={overrides.productMain}
                                  className={classNames(
                                    "__wab_instance",
                                    sty.productMain
                                  )}
                                />
                              </div>
                            ) : null
                          }
                        </ph.DataCtxReader>
                      </ProductCollection>
                    </p.Stack>
                  </p.Stack>
                  <ShopingSection
                    data-plasmic-name={"shopingSection"}
                    data-plasmic-override={overrides.shopingSection}
                    className={classNames("__wab_instance", sty.shopingSection)}
                  />

                  <Instagram
                    data-plasmic-name={"instagram"}
                    data-plasmic-override={overrides.instagram}
                    className={classNames("__wab_instance", sty.instagram)}
                  />

                  <Footer
                    data-plasmic-name={"footer"}
                    data-plasmic-override={overrides.footer}
                    className={classNames("__wab_instance", sty.footer, {
                      [sty.footerglobal_unnamedGlobalGroupOfVariants_unnamedVariant]:
                        hasVariant(
                          globalVariants,
                          "unnamedGlobalGroupOfVariants",
                          "unnamedVariant"
                        )
                    })}
                  />
                </React.Fragment>
              )}
            </ph.DataCtxReader>
          </ProductBox>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "productBox",
    "paheHeaderMenuTextDark",
    "categoryCollection",
    "categoryField",
    "h2",
    "h5",
    "productPrice",
    "productVariantPicker",
    "productQuantity",
    "quantity",
    "likeButton",
    "addToCartButton",
    "button",
    "description4",
    "description3",
    "description2",
    "cart",
    "productCollection",
    "productMain",
    "shopingSection",
    "instagram",
    "footer"
  ],

  productBox: [
    "productBox",
    "paheHeaderMenuTextDark",
    "categoryCollection",
    "categoryField",
    "h2",
    "h5",
    "productPrice",
    "productVariantPicker",
    "productQuantity",
    "quantity",
    "likeButton",
    "addToCartButton",
    "button",
    "description4",
    "description3",
    "description2",
    "cart",
    "productCollection",
    "productMain",
    "shopingSection",
    "instagram",
    "footer"
  ],

  paheHeaderMenuTextDark: ["paheHeaderMenuTextDark"],
  categoryCollection: ["categoryCollection", "categoryField"],
  categoryField: ["categoryField"],
  h2: ["h2"],
  h5: ["h5", "productPrice"],
  productPrice: ["productPrice"],
  productVariantPicker: ["productVariantPicker"],
  productQuantity: ["productQuantity", "quantity"],
  quantity: ["quantity"],
  likeButton: ["likeButton"],
  addToCartButton: ["addToCartButton", "button"],
  button: ["button"],
  description4: ["description4"],
  description3: ["description3"],
  description2: ["description2"],
  cart: ["cart"],
  productCollection: ["productCollection", "productMain"],
  productMain: ["productMain"],
  shopingSection: ["shopingSection"],
  instagram: ["instagram"],
  footer: ["footer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicItem__ArgProps,
          internalVariantPropNames: PlasmicItem__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicItem__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicItem";
  } else {
    func.displayName = `PlasmicItem.${nodeName}`;
  }
  return func;
}

export const PlasmicItem = Object.assign(
  // Top-level PlasmicItem renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    productBox: makeNodeComponent("productBox"),
    paheHeaderMenuTextDark: makeNodeComponent("paheHeaderMenuTextDark"),
    categoryCollection: makeNodeComponent("categoryCollection"),
    categoryField: makeNodeComponent("categoryField"),
    h2: makeNodeComponent("h2"),
    h5: makeNodeComponent("h5"),
    productPrice: makeNodeComponent("productPrice"),
    productVariantPicker: makeNodeComponent("productVariantPicker"),
    productQuantity: makeNodeComponent("productQuantity"),
    quantity: makeNodeComponent("quantity"),
    likeButton: makeNodeComponent("likeButton"),
    addToCartButton: makeNodeComponent("addToCartButton"),
    button: makeNodeComponent("button"),
    description4: makeNodeComponent("description4"),
    description3: makeNodeComponent("description3"),
    description2: makeNodeComponent("description2"),
    cart: makeNodeComponent("cart"),
    productCollection: makeNodeComponent("productCollection"),
    productMain: makeNodeComponent("productMain"),
    shopingSection: makeNodeComponent("shopingSection"),
    instagram: makeNodeComponent("instagram"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicItem
    internalVariantProps: PlasmicItem__VariantProps,
    internalArgProps: PlasmicItem__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "Item",
      description:
        "Nunc parturient ultricies condimentum parturient sagittis urna mus conubia himenaeos fermentum leo mus dignissim pulvinar blandit porta eget ad.",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicItem;
/* prettier-ignore-end */
